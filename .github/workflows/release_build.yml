name: Build the blender plugin and attach to a release

on:
  workflow_dispatch:  # Enables manual triggering
# release:
#   types: [published]

jobs:
  build-and-upload:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set version from release
        run: echo "VERSION=0.2.11" >> $GITHUB_ENV
        # run: echo "VERSION=${{ github.event.release.tag_name && github.event.release.tag_name.startsWith('v') && github.event.release.tag_name != 'v' && github.event.release.tag_name[1:] || github.event.release.tag_name }}" >> $GITHUB_ENV
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libxrender1 \
            libxxf86vm1 \
            libxfixes3 \
            libxi6 \
            libxkbcommon0 \
            libxkbcommon-x11-0 \
            libgl1 \
            libglu1-mesa \
            libsm6 \
            libxext6 \
            libx11-6 \
            libxcb1 \
            libtinfo6

      - name: Cache Blender
        id: cache-blender
        uses: actions/cache@v3
        with:
          path: /tmp/blender.tar.xz
          key: blender-4.2.0

      - name: Install Blender 4.2
        run: |
          BLENDER_VERSION="4.2.4"
          BLENDER_FILE="blender-${BLENDER_VERSION}-linux-x64.tar.xz"

          if [ ! -f /tmp/blender.tar.xz ]; then
            # Download Blender
            wget "https://download.blender.org/release/Blender4.2/${BLENDER_FILE}" -O /tmp/blender.tar.xz
          fi

          # Extract Blender
          tar -xf /tmp/blender.tar.xz

          # Move Blender to /usr/local and create symlink
          sudo mv "blender-${BLENDER_VERSION}-linux-x64" /usr/local/blender
          sudo ln -s /usr/local/blender/blender /usr/local/bin/blender

          # Verify installation
          blender --background --version

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          # Add any additional dependencies your script needs here
          # pip install -r requirements.txt

      - name: Build plugin
        run: |
          # Update the version in blender_manifest.toml
          sed -i "s/^version[ ]*=.*$/version = \"$VERSION\"/g" blender_manifest.toml
          blender --command extension build --output-dir /tmp;
          # Because the upload artifact zips the directory
          # we need to unzip the contents to allow the artifact
          # process to re-zip
          mkdir dist ; 
          unzip /tmp/*.zip -d dist 

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: blender_iiif_3d_plugin-${{ env.VERSION }}
          path: dist